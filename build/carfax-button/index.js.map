{"version":3,"file":"carfax-button/index.js","mappings":"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","sources":["webpack://invp-block-boilerplate/./src/carfax-button/edit.js","webpack://invp-block-boilerplate/./src/carfax-button/save.js","webpack://invp-block-boilerplate/./src/carfax-button/editor.scss?a792","webpack://invp-block-boilerplate/external window [\"wp\",\"blockEditor\"]","webpack://invp-block-boilerplate/external window [\"wp\",\"blocks\"]","webpack://invp-block-boilerplate/external window [\"wp\",\"components\"]","webpack://invp-block-boilerplate/external window [\"wp\",\"coreData\"]","webpack://invp-block-boilerplate/external window [\"wp\",\"data\"]","webpack://invp-block-boilerplate/external window [\"wp\",\"element\"]","webpack://invp-block-boilerplate/external window [\"wp\",\"i18n\"]","webpack://invp-block-boilerplate/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://invp-block-boilerplate/webpack/bootstrap","webpack://invp-block-boilerplate/webpack/runtime/compat get default export","webpack://invp-block-boilerplate/webpack/runtime/define property getters","webpack://invp-block-boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://invp-block-boilerplate/webpack/runtime/make namespace object","webpack://invp-block-boilerplate/./src/carfax-button/index.js"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { \n\tuseBlockProps,\n\tBlockControls\n} from '@wordpress/block-editor';\n\nimport {\n\tPlaceholder,\n\tTextControl\n} from '@wordpress/components';\n\n//Needed to access post meta\nimport { useSelect, withSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\n\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit() {\n\n\tconst blockProps = useBlockProps();\n\tconst postType = useSelect(\n\t\t( select ) => select( 'core/editor' ).getCurrentPostType(),\n\t\t[]\n\t);\n\tconst [ meta, setMeta ] = useEntityProp( 'postType', postType, 'meta' );\n\n\tconst reportUrl = '' == meta[ invp_blocks.meta_prefix + 'carfax_url_report' ] ? 'http://www.carfax.com/VehicleHistory/p/Report.cfx?vin=' + meta[ invp_blocks.meta_prefix + 'vin' ] : meta[ invp_blocks.meta_prefix + 'carfax_url_report' ];\n\n\tfunction SiteUrl() {\n\t\tconst site = useSelect( ( select ) => {\n\t\t\treturn select( 'core' ).getSite();\n\t\t}, [] );\n\t \n\t\tif ( ! site ) {\n\t\t\treturn null;\n\t\t}\n\t \n\t\treturn site.url;\n\t}\n\n\tconst metaCarfaxUrlIcon = meta[ invp_blocks.meta_prefix + 'carfax_url_icon' ];\n\tconst updateCarfaxUrlIconMetaValue = ( newValue ) => {\n\t\tsetMeta( { ...meta, [invp_blocks.meta_prefix + 'carfax_url_icon']: newValue } );\n\t};\n\n\tconst svgUrlLocal = SiteUrl()\n\t\t+ '/wp-content/plugins/inventory-presser/images/show-me-carfax'\n\t\t+ ( '1' == meta[ invp_blocks.meta_prefix + 'carfax_one_owner' ] ? '-1-owner' : '' )\n\t\t+ '.svg';\n\tconst svgUrl = '' == metaCarfaxUrlIcon ? svgUrlLocal : metaCarfaxUrlIcon;\n\n\tif( invp_blocks.use_carfax_provided_buttons && '' == metaCarfaxUrlIcon )\n\t{\n\t\t//We got a problem, show a text box to let the user provide an icon URL\n\t\treturn ( \t\t\n\t\t\t<>\n\t\t\t\t<BlockControls></BlockControls>\n\t\t\t\t<Placeholder\n\t\t\t\t\t{ ...blockProps }\n\t\t\t\t\tlabel={ __( 'Carfax Button', 'inventory-presser' ) }\n\t\t\t\t\tinstructions={ __( 'No button URL saved for this vehicle. The site is configured to use Carfax-provided buttons at Vehicles â†’ Options.', 'inventory-presser' ) }\n\t\t\t\t>\n\t\t\t\t\t<TextControl\t\t\t\t\t\t\n\t\t\t\t\t\tlabel={ __( 'Carfax Button URL', 'inventory-presser' ) }\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tonChange={ updateCarfaxUrlIconMetaValue }\n\t\t\t\t\t\tvalue={ metaCarfaxUrlIcon }\n\t\t\t\t\t></TextControl>\n\t\t\t\t</Placeholder>\n\n\t\t\t</> \n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls></BlockControls>\n\t\t\t<div \n\t\t\t\tclassName=\"carfax-wrapper\" \n\t\t\t\t{ ...blockProps }\n\t\t\t>\n\t\t\t\t<a \n\t\t\t\t\thref={ reportUrl }\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t<img src={ svgUrl } alt={ __( 'SHOW ME THE CARFAX', 'inventory-presser' ) } />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</>\n\t);\n}","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save() {\n\treturn null;\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType('inventory-presser/invp-carfax-button', {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n"],"names":["__","useBlockProps","BlockControls","Placeholder","TextControl","useSelect","withSelect","useEntityProp","Edit","blockProps","postType","select","getCurrentPostType","meta","setMeta","reportUrl","invp_blocks","meta_prefix","SiteUrl","site","getSite","url","metaCarfaxUrlIcon","updateCarfaxUrlIconMetaValue","newValue","svgUrlLocal","svgUrl","use_carfax_provided_buttons","save","registerBlockType","edit"],"sourceRoot":""}